/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package revisão;

import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author calbe
 */
public class CompraGUI extends javax.swing.JPanel {
    //armazena temporariamente o produto cujo código foi buscado
    private Produto produtoS;
    private ModeloTabelaBuy cart;
    private double precoComp;
    
    public CompraGUI() {
        initComponents();
        precoComp = 0.0;
        myInitComponents();
    }
    
    private void myInitComponents(){
        this.cart = new ModeloTabelaBuy(this);
        //modificando a tabela para ela se comportar como o modelo criado
        tableCar.setModel(cart);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codigoTxt = new javax.swing.JTextField();
        nomeTxt = new javax.swing.JTextField();
        quantTxt = new javax.swing.JTextField();
        preçoTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCar = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        endButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addProdButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel3.setText("Quantidade");

        codigoTxt.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        codigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoTxtKeyTyped(evt);
            }
        });

        nomeTxt.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        nomeTxt.setEnabled(false);
        nomeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTxtActionPerformed(evt);
            }
        });

        quantTxt.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        quantTxt.setText("1");
        quantTxt.setEnabled(false);
        quantTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantTxtKeyReleased(evt);
            }
        });

        preçoTxt.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        preçoTxt.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel4.setText("Preço Parcial");

        tableCar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableCar);

        removeButton.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        removeButton.setText("Remover");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        endButton.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        endButton.setText("Finalizar");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endButtonActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jButton3.setText("Estoque");

        addProdButton.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        addProdButton.setText("Adicionar Produto");
        addProdButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProdButtonMouseClicked(evt);
            }
        });
        addProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel5.setText("Valor Total R$:");

        totalTxt.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        totalTxt.setText("0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(codigoTxt)
                        .addComponent(nomeTxt)
                        .addComponent(quantTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                        .addComponent(preçoTxt))
                    .addComponent(addProdButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalTxt)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(removeButton)
                    .addComponent(endButton))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(removeButton)
                        .addGap(37, 37, 37)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(preçoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProdButton)
                    .addComponent(jLabel5)
                    .addComponent(totalTxt)
                    .addComponent(endButton))
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nomeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTxtActionPerformed

    private void codigoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTxtKeyTyped
        
        if(evt.getKeyChar() == '\n'){
        
            //checkando se o campo do código está preenchido
            if(!codigoTxt.getText().isEmpty()){
                try{
                    int code = Integer.parseInt(codigoTxt.getText());

                    //busca do produto
                    produtoS = FakeBD.searchCode(code);

                    if(produtoS != null){
                        nomeTxt.setText(produtoS.getNome());
                        preçoTxt.setText(produtoS.getPreco()+"");
                        quantTxt.setEnabled(true);
                    }else{
                        //produto não cadastrado
                        JOptionPane.showMessageDialog(null,"Não existe nenhum produto que possua o código informado","Cheque o código",JOptionPane.WARNING_MESSAGE);
                    }

                }catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico","Erro no código",JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_codigoTxtKeyTyped

    private void quantTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantTxtKeyPressed
        
    }//GEN-LAST:event_quantTxtKeyPressed

    private void quantTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantTxtKeyReleased
        //o operador do caixa altera a quantidadde do produto, para calcular um valor para produtos que forem ser comprados em quantidades maiores que um
        if(!quantTxt.getText().isEmpty()){
            try{
                int quantidade = Integer.parseInt(quantTxt.getText());

                double parcial = produtoS.getPreco()* quantidade;
                preçoTxt.setText(String.format("%.2f",parcial));
            }catch(NumberFormatException e){
                preçoTxt.setText("N/A");
            }
        }else{
            //campo da quantidade vazia
            preçoTxt.setText("N/A");
        }
        
    }//GEN-LAST:event_quantTxtKeyReleased

    private void addProdButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProdButtonMouseClicked
        
    }//GEN-LAST:event_addProdButtonMouseClicked

    private void addProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdButtonActionPerformed
        //verificação se o produto existe e se o preço é diferente de valor inválido
        if(produtoS!=null && !quantTxt.getText().equals("N/A")){
            //produto pode ser adicionado
            int qUser = Integer.parseInt(quantTxt.getText());
            if(qUser <= produtoS.getQuantidade()){
                
                Produto prodSold = new Produto(produtoS.getCodigo(),produtoS.getNome(),produtoS.getPreco(),qUser);
                //produtoS.setQuantidade(produtoS.getQuantidade() - qUser);
                
                //atualizando valor da compra
                precoComp += produtoS.getPreco()* qUser;
                totalTxt.setText(String.format("%.2f",precoComp));
                
                //os campos são limpos para que um novo produto seja pesquisado
                codigoTxt.setText("");
                quantTxt.setText("1");
                preçoTxt.setText("");
                produtoS = null;
                quantTxt.setEnabled(false);
                nomeTxt.setText("");
                
                //adição do produto que foi vendido ao carrinho
                this.cart.addProd(prodSold);
                tableCar.updateUI();
                
            }else{
                //não há a quantidade de produto solicitada pelo cliente
                JOptionPane.showMessageDialog(null,
                        "Não há quantidade suficiente do produto em estoque para realizar a venda",
                        "Quantidade Insuficiente!",
                        JOptionPane.INFORMATION_MESSAGE);
                codigoTxt.setText("");
                quantTxt.setText("1");
                preçoTxt.setText("");
                produtoS = null;
                quantTxt.setEnabled(false);
                nomeTxt.setText("");
                
            }
            
        }else {
            //produto inexistente ou quantidade errada
            JOptionPane.showMessageDialog(null,
                    "A quantidade informada deve ser um valor numérico.",
                    "Quantidade inválida!",
                    JOptionPane.WARNING_MESSAGE);
        }
    }    
        
    public void f5(){
        //atualiza os dados apresentados na tabela
        tableCar.updateUI();
        //atualização dos valores da compra com a nova quantidade
        double price = cart.calculaPrecoParcialC();
        
        totalTxt.setText(String.format("%.2f",price));
        
    }//GEN-LAST:event_addProdButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        
        int linha = tableCar.getSelectedRow();
        
        if(linha > -1){
            
            int option = JOptionPane.showConfirmDialog(null,
                    "Deseja remover o produto selecionado?",
                    "Confirmação pré exclusão",
                    JOptionPane.YES_NO_OPTION);
            if(option == JOptionPane.YES_OPTION) {
                //remoção do produto e atualização da tabela e do valor da compra
                String senha = JOptionPane.showInputDialog(null,
                        "Informe a senha do gerente",
                        "Operação Restrita!",
                        JOptionPane.INFORMATION_MESSAGE);
                if(senha != null && senha.equals("12345")){
                    cart.removeProd(linha);
                    f5();
                }
            }
        }else{
            //nenhum produto foi selecionado para remoção
            JOptionPane.showMessageDialog(null,
                    "Por favor, selecione algum produto",
                    "Selecione um produto!",
                    JOptionPane.INFORMATION_MESSAGE
                    );
        }
        
    }//GEN-LAST:event_removeButtonActionPerformed
    
    private boolean verifyQuant(){
        Vector <Produto> produtos = cart.getBuyCart();
        
        for (int i=0; i < produtos.size(); i++){
            Produto stock = FakeBD.searchCode(produtos.get(i).getCodigo());
            if(produtos.get(i).getQuantidade() > stock.getQuantidade()){
            JOptionPane.showMessageDialog(null, "A quantidade do produto: "+stock.getNome()+
                    " não é suficiente para finalizar a venda.","Quantidade insuficiente",
                    JOptionPane.INFORMATION_MESSAGE);
            return false;
            }
        }
        return true;
    }
    
    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endButtonActionPerformed
        //verificar se as quantidades de todos os produtos são suficientes para realizar as vendas
        if(verifyQuant()){
            //atualizar o pseudo banco de dados
            
            Vector <Produto> produtos = cart.getBuyCart();
            for(int i = 0; i < produtos.size();i++){
                Produto stock = FakeBD.searchCode(produtos.get(i).getCodigo());
                stock.setQuantidade(stock.getQuantidade() - produtos.get(i).getQuantidade());
            }
            
            //resetando valores para começar uma nova compra
            precoComp = 0.0;
            totalTxt.setText("0.0");
            //remover os produtos do carrinho para a próxima compra
            cart.resetCart();
            tableCar.updateUI();
        } 
      
    }//GEN-LAST:event_endButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdButton;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JButton endButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTxt;
    private javax.swing.JTextField preçoTxt;
    private javax.swing.JTextField quantTxt;
    private javax.swing.JButton removeButton;
    private javax.swing.JTable tableCar;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
